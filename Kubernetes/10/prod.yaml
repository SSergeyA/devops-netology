---
apiVersion: v1
kind: Namespace
metadata:
  name: prod

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: prod
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: ssergeya/frontend:1.0.1
          ports:
            - containerPort: 8000
          env:
            - name: BASE_URL
              value: http://frontend.prod.svc.cluster.local:9000
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: prod
spec:
  ports:
    - name: "frontend"
      port: 8000
      targetPort: 8000
  selector:
    app: frontend
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: prod
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: ssergeya/backend:2.0.2
          ports:
            - containerPort: 9000
          env:
            - name: DATABASE_URL
              value: postgres://postgres:postgres@postgres.prod.svc.cluster.local:5432/news

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
  namespace: prod
spec:
  ports:
    - name: "backend"
      port: 9000
      targetPort: 9000
  selector:
    app: backend
  type: ClusterIP

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-prod
  namespace: prod
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/pv/data"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-claim-prod
  namespace: prod
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
  namespace: prod
  labels:
    app: db
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - image: postgres:13-alpine
          name: db
          env:
            - name: POSTGRES_DB
              value: news
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
            - name: PGDATA
              value: /data/pgdata
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-pv-prod
              mountPath: /data
      volumes:
      - name: postgres-pv-prod
        persistentVolumeClaim:
          claimName: postgres-claim-prod

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: db
  name: postgres
  namespace: prod
spec:
  ports:
    - name: "postgres"
      port: 5432
      targetPort: 5432
  selector:
    app: db
  type: ClusterIP
